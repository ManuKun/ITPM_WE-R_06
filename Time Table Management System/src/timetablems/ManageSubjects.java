 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablems;

import timetablems.DBConnect;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static org.sqlite.core.NativeDB.load;

/**
 *
 * @author Supun
 */
public class ManageSubjects extends javax.swing.JFrame {

    /**
     * Creates new form ManageSubjects
     */
    public ManageSubjects() throws Exception {
        initComponents();
        con = DBConnect.connect();
        load();
        //table color
        mTable.setBackground(Color.white);
        // disabale Maximize button
        setResizable(false);
        //full screan
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        //srean center code
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    Connection con;
    PreparedStatement pst;
    DefaultTableModel df;
    
    public void load()
    {
        int a;
        try {
            pst = con.prepareStatement("select * from subject");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a = rd.getColumnCount();
            df = (DefaultTableModel)mTable.getModel();
            df.setRowCount(0);
            
            
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for(int i=1; i <= a; i++)
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("s_code"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("semester"));
                    v2.add(rs.getString("lechr"));
                    v2.add(rs.getString("tutehr"));
                    v2.add(rs.getString("labhr"));
                    v2.add(rs.getString("evehr"));
                     
                    
                }

                df.addRow(v2);
            }
      
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtsname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtscode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtyear = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtlec = new javax.swing.JComboBox<>();
        txttute = new javax.swing.JComboBox<>();
        txtlab = new javax.swing.JComboBox<>();
        txteve = new javax.swing.JComboBox<>();
        Clear = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        txtsem = new javax.swing.JComboBox<>();
        errorscode = new javax.swing.JLabel();
        errorsname = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "              ID", "Subject Name", "Subject Code", "Offered Year", "Offered Semester", "No. of Lecture Hrs", "No. of Tutorial Hrs", "No. of Lab Hrs", "No. of Evelution Hrs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, 966, 344));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Manage Subjects");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 11, -1, -1));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 44, 144, 32));

        Search.setBackground(new java.awt.Color(0, 102, 204));
        Search.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Search");
        Search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(869, 42, 107, 34));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Subject Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 449, 114, 30));

        txtsname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsnameActionPerformed(evt);
            }
        });
        txtsname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsnameKeyReleased(evt);
            }
        });
        jPanel1.add(txtsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 451, 140, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Subject Code");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 499, 114, 30));

        txtscode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtscodeKeyReleased(evt);
            }
        });
        jPanel1.add(txtscode, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 501, 140, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Offered Year");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 549, 114, 30));

        txtyear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year 1", "Year 2", "Year 3", "Year 4" }));
        txtyear.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtyear.setLightWeightPopupEnabled(false);
        txtyear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtyearKeyReleased(evt);
            }
        });
        jPanel1.add(txtyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 549, 140, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Offered Semester");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 597, 114, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("NO. of Lecture Hours");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 449, 139, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("NO. of Tutorial Hours");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 499, 139, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("NO. of Lab Hours");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 549, 139, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("NO. of Evelution Hours");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 597, -1, 30));

        txtlec.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtlec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week" }));
        txtlec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlecKeyReleased(evt);
            }
        });
        jPanel1.add(txtlec, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 449, 140, 30));

        txttute.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txttute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week", "No Hours" }));
        txttute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttuteActionPerformed(evt);
            }
        });
        txttute.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttuteKeyReleased(evt);
            }
        });
        jPanel1.add(txttute, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 499, 140, 30));

        txtlab.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtlab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week", "No Hours" }));
        txtlab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlabActionPerformed(evt);
            }
        });
        txtlab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlabKeyReleased(evt);
            }
        });
        jPanel1.add(txtlab, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 549, 140, 30));

        txteve.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txteve.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week", "No Hours" }));
        txteve.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txteveKeyReleased(evt);
            }
        });
        jPanel1.add(txteve, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 597, 140, 30));

        Clear.setBackground(new java.awt.Color(0, 102, 204));
        Clear.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setText("Clear");
        Clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        Clear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClearKeyReleased(evt);
            }
        });
        jPanel1.add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(832, 478, 95, -1));

        Update.setBackground(new java.awt.Color(0, 102, 204));
        Update.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        Update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UpdateKeyReleased(evt);
            }
        });
        jPanel1.add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(832, 527, 95, -1));

        Delete.setBackground(new java.awt.Color(0, 102, 204));
        Delete.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("Delete");
        Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(832, 576, 95, -1));

        txtsem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtsem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semester 1", "Semester 2" }));
        txtsem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtsem.setLightWeightPopupEnabled(false);
        txtsem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsemKeyReleased(evt);
            }
        });
        jPanel1.add(txtsem, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 597, 140, 30));

        errorscode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(errorscode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 499, 160, 32));

        errorsname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(errorsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 449, 160, 32));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/timetablems/1799658.jpg"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 640));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 986, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
         // TODO add your handling code here:
        df = (DefaultTableModel)mTable.getModel();

        int selected = mTable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());

        int x = JOptionPane.showConfirmDialog(null, "Are you want to delete the record?", "Delete", JOptionPane.YES_NO_OPTION);

        if(x == 0)
        {

            try {

                pst = con.prepareStatement("delete from subject where id = ?");
                pst.setInt(1,id);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this,"Subject Deleted Successfully");

                txtsname.setText("");
                txtscode.setText("");
                txtyear.setSelectedIndex(0);
                txtsem.setSelectedIndex(0);
                txtlec.setSelectedIndex(0);
                txttute.setSelectedIndex(0);
                txtlab.setSelectedIndex(0);
                txteve.setSelectedIndex(0);

                errorsname.setText("");
                errorscode.setText("");

                load();

            } catch (SQLException ex) {
                Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:

        if(txtsname.getText().trim().isEmpty()){
            errorsname.setText("*Please Enter Subject Name !");

        }
        else
        errorsname.setText("");

        if(txtscode.getText().trim().isEmpty()){
            errorscode.setText("*Please Enter Subject Code !");
        }
        else
        errorscode.setText("");

        if(txtsname.getText().trim().isEmpty() || txtscode.getText().trim().isEmpty()){
            Component frame = null;

            JOptionPane.showMessageDialog(frame, "Please fill in a valid value!!!");

        }

        else{

            df = (DefaultTableModel) mTable.getModel();

            int selected = mTable.getSelectedRow();
            int id = Integer.parseInt(df.getValueAt(selected, 0).toString());

            String SubName = txtsname.getText();
            String SubCode = txtscode.getText();
            String OfferedYear = txtyear.getSelectedItem().toString();
            String OfferedSemester = txtsem.getSelectedItem().toString();
            String Lecturehr = txtlec.getSelectedItem().toString();
            String Tutehr = txttute.getSelectedItem().toString();
            String Labhr = txtlab.getSelectedItem().toString();
            String Evehr = txteve.getSelectedItem().toString();

            int x = JOptionPane.showConfirmDialog(null, "Are you want to update Subject?", "Update", JOptionPane.YES_NO_OPTION);

            if(x == 0)
            {

                try {
                    pst = con.prepareStatement("update subject set name =?, s_code =?, year =?, semester =?, lechr =?, tutehr =?, labhr=?, evehr =? where id =?");
                    pst.setString(1,SubName);
                    pst.setString(2,SubCode);
                    pst.setString(3,OfferedYear);
                    pst.setString(4,OfferedSemester);
                    pst.setString(5,Lecturehr);
                    pst.setString(6,Tutehr);
                    pst.setString(7,Labhr);
                    pst.setString(8,Evehr);
                    pst.setInt(9,id);

                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Subject Updated Successfully");

                    txtsname.setText("");
                    txtscode.setText("");
                    txtyear.setSelectedIndex(0);
                    txtsem.setSelectedIndex(0);
                    txtlec.setSelectedIndex(0);
                    txttute.setSelectedIndex(0);
                    txtlab.setSelectedIndex(0);
                    txteve.setSelectedIndex(0);

                    errorsname.setText("");
                    errorscode.setText("");

                    load();

                }   catch (Exception ex) {
                    Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        txtsname.setText("");
        txtscode.setText("");
        txtyear.setSelectedIndex(0);
        txtsem.setSelectedIndex(0);
        txtlec.setSelectedIndex(0);
        txttute.setSelectedIndex(0);
        txtlab.setSelectedIndex(0);
        txteve.setSelectedIndex(0);
        txtsearch.setText("");

        df.setRowCount(0);
        try {
            load();
        } catch (Exception ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClearActionPerformed

    private void txtlabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlabActionPerformed

    private void txttuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttuteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttuteActionPerformed

    private void txtscodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtscodeKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[IT|SE|IE|CSIE]{2,4}[0-9]{4}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtscode.getText());

        if(!match.matches()){
            errorscode.setText("* Subject code is incorrect !!");
            Update.setEnabled(false);
        }
        else{
            errorscode.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtyear.requestFocus();
            }
    }//GEN-LAST:event_txtscodeKeyReleased

    private void txtsnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsnameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[A-Z]{2,5}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtsname.getText());
        if(!match.matches()){
            errorsname.setText("* Subject Name is invalid !");
            Update.setEnabled(false);
        }
        else{
            errorsname.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtscode.requestFocus();
            }
    }//GEN-LAST:event_txtsnameKeyReleased

    private void txtsnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsnameActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        String val = txtsearch.getText().toString();

        int a;

        try {

            pst  = con.prepareStatement("select * from subject where name like '%"+val+"%'");
            ResultSet rs = pst.executeQuery();

            ResultSetMetaData rd = rs.getMetaData();
            a= rd.getColumnCount();
            df = (DefaultTableModel)mTable.getModel();
            df.setRowCount(0);

            while(rs.next())
            {
                Vector v2 = new Vector();
                for(int i=1; i<=a; i++){

                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("s_code"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("semester"));
                    v2.add(rs.getString("lechr"));
                    v2.add(rs.getString("tutehr"));
                    v2.add(rs.getString("labhr"));
                    v2.add(rs.getString("evehr"));

                }
                df.addRow(v2);
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_SearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        df.setRowCount(0);
        load();
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Search.requestFocus();
            }
    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void mTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mTableMouseClicked
        // TODO add your handling code here:
        df = (DefaultTableModel)mTable.getModel();

        int selected = mTable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());

        txtsname.setText(df.getValueAt(selected, 1).toString());
        txtscode.setText(df.getValueAt(selected, 2).toString());

        String year = (df.getValueAt(selected, 3).toString());

        switch(year){
            case "Year 1" :
            txtyear.setSelectedIndex(0);
            break;

            case "Year 2" :
            txtyear.setSelectedIndex(1);
            break;

            case "Year 3" :
            txtyear.setSelectedIndex(2);
            break;

            case "Year 4" :
            txtyear.setSelectedIndex(3);
            break;

        }

        String semester = (df.getValueAt(selected, 4).toString());

        switch(semester){
            case "Semester 1" :
            txtsem.setSelectedIndex(0);
            break;

            case "Semester 2" :
            txtsem.setSelectedIndex(1);
            break;

        }

        String lechr = (df.getValueAt(selected, 5).toString());

        switch(lechr){
            case "1 Hours/Week" :
            txtlec.setSelectedIndex(0);
            break;

            case "2 Hours/Week" :
            txtlec.setSelectedIndex(1);
            break;

            case "3 Hours/Week" :
            txtlec.setSelectedIndex(2);
            break;

            case "4 Hours/Week" :
            txtlec.setSelectedIndex(3);
            break;

            case "5 Hours/Week" :
            txtlec.setSelectedIndex(4);
            break;

        }

        String tutehr = (df.getValueAt(selected, 6).toString());

        switch(tutehr){
            case "1 Hours/Week" :
            txttute.setSelectedIndex(0);
            break;

            case "2 Hours/Week" :
            txttute.setSelectedIndex(1);
            break;

            case "3 Hours/Week" :
            txttute.setSelectedIndex(2);
            break;

            case "4 Hours/Week" :
            txttute.setSelectedIndex(3);
            break;

            case "5 Hours/Week" :
            txttute.setSelectedIndex(4);
            break;

            case "No Hours" :
            txttute.setSelectedIndex(5);
            break;

        }

        String labhr = (df.getValueAt(selected, 7).toString());

        switch(labhr){
            case "1 Hours/Week" :
            txtlab.setSelectedIndex(0);
            break;

            case "2 Hours/Week" :
            txtlab.setSelectedIndex(1);
            break;

            case "3 Hours/Week" :
            txtlab.setSelectedIndex(2);
            break;

            case "4 Hours/Week" :
            txtlab.setSelectedIndex(3);
            break;

            case "5 Hours/Week" :
            txtlab.setSelectedIndex(4);
            break;

            case "No Hours" :
            txtlab.setSelectedIndex(5);
            break;

        }

        String evehr = (df.getValueAt(selected, 8).toString());

        switch(evehr){
            case "1 Hours/Week" :
            txteve.setSelectedIndex(0);
            break;

            case "2 Hours/Week" :
            txteve.setSelectedIndex(1);
            break;

            case "3 Hours/Week" :
            txteve.setSelectedIndex(2);
            break;

            case "4 Hours/Week" :
            txteve.setSelectedIndex(3);
            break;

            case "5 Hours/Week" :
            txteve.setSelectedIndex(4);
            break;

            case "No Hours" :
            txteve.setSelectedIndex(5);
            break;

        }

    }//GEN-LAST:event_mTableMouseClicked

    private void txtyearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtyearKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtsem.requestFocus();
            }
    }//GEN-LAST:event_txtyearKeyReleased

    private void txtsemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsemKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtlec.requestFocus();
            }
    }//GEN-LAST:event_txtsemKeyReleased

    private void txtlecKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlecKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txttute.requestFocus();
            }
    }//GEN-LAST:event_txtlecKeyReleased

    private void txttuteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttuteKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtlab.requestFocus();
            }
    }//GEN-LAST:event_txttuteKeyReleased

    private void txtlabKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlabKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txteve.requestFocus();
            }
    }//GEN-LAST:event_txtlabKeyReleased

    private void txteveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txteveKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Clear.requestFocus();
            }
    }//GEN-LAST:event_txteveKeyReleased

    private void ClearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClearKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Update.requestFocus();
            }
    }//GEN-LAST:event_ClearKeyReleased

    private void UpdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpdateKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Delete.requestFocus();
            }
    }//GEN-LAST:event_UpdateKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ManageSubjects().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JLabel errorscode;
    private javax.swing.JLabel errorsname;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mTable;
    private javax.swing.JComboBox<String> txteve;
    private javax.swing.JComboBox<String> txtlab;
    private javax.swing.JComboBox<String> txtlec;
    private javax.swing.JTextField txtscode;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JComboBox<String> txtsem;
    private javax.swing.JTextField txtsname;
    private javax.swing.JComboBox<String> txttute;
    private javax.swing.JComboBox<String> txtyear;
    // End of variables declaration//GEN-END:variables
}
