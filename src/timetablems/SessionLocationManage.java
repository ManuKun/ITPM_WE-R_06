/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablems;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Manujaya
 */
public class SessionLocationManage extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pst =null;
    ResultSet rs=null;
    DefaultTableModel model = new DefaultTableModel();
    
    public SessionLocationManage() {
        initComponents();
        conn = SessionLocationManage.ConnectDb();
        
        Object col[] = {"SRID","Session","Room"};
        model.setColumnIdentifiers(col);
        jTable2.setModel(model);
        
        
        Fillcombo();
        load();
        
        setResizable(false);
        //srean center code
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtsearches = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Sess = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        list = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Session Locations");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 11, -1, -1));

        txtsearches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchesActionPerformed(evt);
            }
        });
        txtsearches.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchesKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearches, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 51, 298, 33));

        Search.setBackground(new java.awt.Color(0, 102, 204));
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Search");
        jPanel1.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 51, 88, 33));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SRID", "Session", "Room"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 102, 698, 210));

        Update.setBackground(new java.awt.Color(0, 102, 204));
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(585, 444, 88, 33));

        Delete.setBackground(new java.awt.Color(0, 102, 204));
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 323, 88, 33));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Session :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 399, -1, -1));

        Sess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SessActionPerformed(evt);
            }
        });
        jPanel1.add(Sess, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 395, 330, 29));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Room :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 399, -1, -1));

        list.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                listPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        jPanel1.add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 392, 163, 34));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/timetablems/1799658.jpg"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search( String query){
        
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(model);
        jTable2.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
    public static Connection ConnectDb(){
        try
        {
        Class.forName("org.sqlite.JDBC");
        Connection conn = DriverManager.getConnection("jdbc:sqlite:ttms.db");
        return conn;
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    
    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
       
        try{            
            int row = jTable2.getSelectedRow();
            String value = (jTable2.getModel().getValueAt(row, 0).toString());
            String value1=list.getSelectedItem().toString();

            String sql = "UPDATE session_location SET Session=?, Room=? , RoomSign=? where SRID="+value;
            pst = conn.prepareStatement(sql);
            
            pst.setString(1, Sess.getText());
            pst.setString(2, value1);
            pst.setString(3,Sess.getText() + "-" + value1);
             
            
            
            pst.executeUpdate();

            
            JOptionPane.showMessageDialog(null,"Successfully Updated!");
            load();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Something Went Wrong! "+e);
        
    }      
    }//GEN-LAST:event_UpdateActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
     
        String tblsession = tblModel.getValueAt(jTable2.getSelectedRow(), 1).toString();
        
         String Lecturer1 = jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString();
            for(int i=0; i<list.getItemCount();i++) {
		if(list.getItemAt(i).toString().equalsIgnoreCase(Lecturer1)) {
			list.setSelectedIndex(i);
                    }
		}
        
        
        Sess.setText(tblsession);
        
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
            try{
            int row=jTable2.getSelectedRow();
            String value=(jTable2.getModel().getValueAt(row, 0).toString());
            String sql ="DELETE FROM session_location WHERE SRID ="+value;
            pst = conn.prepareStatement(sql);
            pst.execute();
            
            //Auto Refresh Table
            
            JOptionPane.showMessageDialog(null,"Successfully Deleted!");
            load();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Something Went Wrong "+e);
            }
    }//GEN-LAST:event_DeleteActionPerformed

    private void txtsearchesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchesKeyPressed
      
    }//GEN-LAST:event_txtsearchesKeyPressed

    private void txtsearchesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchesKeyReleased
        String val = txtsearches.getText().toString();
        
        int a;
        
        try{
            pst = conn.prepareStatement("select * from session_location where Room like '%"+val+"%'");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a= rd.getColumnCount();
            model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);
            
         while(rs.next()){
         
             Vector v2 = new Vector();
             for(int i = 1; i<=a; i++){
             
                 v2.add(rs.getString("SRID"));
                 v2.add(rs.getString("Session"));
                 v2.add(rs.getString("Room"));
                
             }
            
             model.addRow(v2);
         
         }
        }
        catch(Exception e){
        
            Logger.getLogger(LocationManage.class.getName()).log(Level.SEVERE, null, e);
        }
             
        
    }//GEN-LAST:event_txtsearchesKeyReleased

    private void txtsearchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchesActionPerformed
        
    }//GEN-LAST:event_txtsearchesActionPerformed

    private void SessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SessActionPerformed

    private void listPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_listPopupMenuWillBecomeInvisible
        
    }//GEN-LAST:event_listPopupMenuWillBecomeInvisible

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked

    }//GEN-LAST:event_listMouseClicked

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listActionPerformed

    /**
     * @param args the command line arguments
     */
    public void load(){
    
        int a;
        try{
            pst = conn.prepareStatement("select * from session_location");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a= rd.getColumnCount();
            model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);
            
            while(rs.next()){
            
                Vector v2 = new Vector();
                for(int i = 1; i<=a; i++){
                
                 v2.add(rs.getString("SRID"));
                 v2.add(rs.getString("Session"));
                 v2.add(rs.getString("Room"));
                
                }
                   model.addRow(v2);
            }
        }
        
        catch(Exception e){}
    
    }
    
//    public void updateTable(){
//    
//        String sql="Select Session,Room from session_location";
//        
//        try
//        {
//            pst = conn.prepareStatement(sql);
//            rs = pst.executeQuery();
//            Object[] columnData = new Object[6];
//            
//            while(rs.next()){
//                columnData [0] = rs.getString("l_id");
//                columnData [1] = rs.getString("building");
//                columnData [2] = rs.getString("room");
//                columnData [3] = rs.getString("r_subject");
//                columnData [4] = rs.getString("capacity");
//                columnData [5] = rs.getString("room_type");
//                
//                model.addRow(columnData);
//            }
//        }
//        catch(Exception e)
//        {
//            JOptionPane.showMessageDialog(null, e);
//        }
//    }
    
    
    
     private void Fillcombo(){
   try{
    String sql ="select room from location";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    
    while(rs.next()){
      String alldetails =rs.getString("room");
      list.addItem(alldetails);
    
    }
   
   }catch(Exception e){
   
    JOptionPane.showMessageDialog(null, e);
   }
   
   }
   
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SessionLocationManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SessionLocationManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SessionLocationManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SessionLocationManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SessionLocationManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Search;
    private javax.swing.JTextField Sess;
    private javax.swing.JButton Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> list;
    private javax.swing.JTextField txtsearches;
    // End of variables declaration//GEN-END:variables
}
