/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package timetablems;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.MessageFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Manujaya
 */
public class GenSessionLecturer extends javax.swing.JFrame {
    
    Connection conn = null;
    PreparedStatement pst =null;
    ResultSet rs=null;
    DefaultTableModel model = new DefaultTableModel();

    /** Creates new form GenSessionLocation */
    public GenSessionLecturer() {
        initComponents();
        conn = SessionLocationManage.ConnectDb();
        
        Object col[] = {"Time","Monday","Tuesday","Wednesday","Thursday","Friday"};
        model.setColumnIdentifiers(col);
        jTable2.setModel(model);
        //loadtime();
        Fillcombo();
        
        setResizable(false);
        //screen center code
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        list = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Print = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Generate Time Table");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 11, -1, -1));

        Search.setBackground(new java.awt.Color(0, 102, 204));
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Generate");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 58, 88, 33));

        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(80);
        jTable2.setRowMargin(5);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 109, 800, 384));

        list.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                listPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        jPanel1.add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 58, 273, 33));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Lecturer :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 58, 68, -1));

        Print.setBackground(new java.awt.Color(0, 102, 204));
        Print.setForeground(new java.awt.Color(255, 255, 255));
        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });
        jPanel1.add(Print, new org.netbeans.lib.awtextra.AbsoluteConstraints(635, 58, 88, 33));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/timetablems/1799658.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 510));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void search( String query){
        
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(model);
        jTable2.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
     public static Connection ConnectDb(){
        try
        {
        Class.forName("org.sqlite.JDBC");
        Connection conn = DriverManager.getConnection("jdbc:sqlite:ttms.db");
        return conn;
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        

    }//GEN-LAST:event_jTable2MouseClicked

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String val = (String)list.getSelectedItem();
        
        int a;
        
        try{
            pst = conn.prepareStatement("select startTime || ' - ' ||endTime AS TIME,monday,tuesday,wednesday,thursday,friday from timeTable where lecName= '"+val+"' order by TIME ASC" );
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a= rd.getColumnCount();
            model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);
            
         while(rs.next()){
         
             Vector v2 = new Vector();
             for(int i = 1; i<=a; i++){
             
                 v2.add(rs.getString("TIME"));
                 v2.add(rs.getString("monday"));
                 v2.add(rs.getString("tuesday"));
                 v2.add(rs.getString("wednesday"));
                 v2.add(rs.getString("thursday"));
                 v2.add(rs.getString("friday"));
                 
             }
            
             model.addRow(v2);
         
         }
        }
        catch(Exception e){
        
            Logger.getLogger(LocationManage.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void listPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_listPopupMenuWillBecomeInvisible
        
    }//GEN-LAST:event_listPopupMenuWillBecomeInvisible

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked

    }//GEN-LAST:event_listMouseClicked

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
  
        String path="";
        JFileChooser j=new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x=j.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION)
        {
            path=j.getSelectedFile().getPath();
        }
        
        Document doc=new Document();
        
        try{
            PdfWriter.getInstance(doc, new FileOutputStream(path+"Lecture Sessions.pdf"));
        
            doc.open();
            
            PdfPTable tbl=new PdfPTable(6);
            
            //Adding Header
            
            tbl.addCell("Time");
            tbl.addCell("Monday");
            tbl.addCell("Tuesday");
            tbl.addCell("Wednesday");
            tbl.addCell("Thursday");
            tbl.addCell("Friday");
            
            for (int i =0; i < jTable2.getRowCount(); i++){
            
                String Time=jTable2.getValueAt(i,0).toString();
                String Monday=jTable2.getValueAt(i,1).toString();
                String Tuesday=jTable2.getValueAt(i,2).toString();
                String Wednesday=jTable2.getValueAt(i,3).toString();
                String Thursday=jTable2.getValueAt(i,4).toString();
                String Friday=jTable2.getValueAt(i,5).toString();
            
                tbl.addCell(Time);
                tbl.addCell(Monday);
                tbl.addCell(Tuesday);
                tbl.addCell(Wednesday);
                tbl.addCell(Thursday);
                tbl.addCell(Friday);
            }
            
            doc.add(tbl);
            
        }catch(FileNotFoundException ex){
        
            Logger.getLogger(GenSessionLecturer.class.getName()).log(Level.SEVERE, null, ex);
            
        }catch(DocumentException ex){
        
            Logger.getLogger(GenSessionLecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
        doc.close();  
    }//GEN-LAST:event_PrintActionPerformed

    /**
     * @param args the command line arguments
     */
    
//     public void loadtime(){
//    
//        int a;
//        try{
//            
//            pst = conn.prepareStatement("select * from not_available");
//            ResultSet rs = pst.executeQuery();
//            
//            
//            ResultSetMetaData rd = rs.getMetaData();
//            a= rd.getColumnCount();
//            model = (DefaultTableModel)jTable2.getModel();
//            model.setRowCount(0);
//            
//            while(rs.next()){
//            
//                Vector v2 = new Vector();
//                for(int i = 1; i<=a; i++){
//                
//                    
//                    
//                 v2.add(rs.getString("startTime"));
//                 v2.add(rs.getString("alldetails"));
//                 
//                
//                }
//                   model.addRow(v2);
//            }
//        }
//        
//        catch(Exception e){}
//    
//    }
     
    private void Fillcombo(){
   try{
    String sql ="select name from lecturer";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    
    while(rs.next()){
      String name1 =rs.getString("name");
      list.addItem(name1);
    
    }
   
   }catch(Exception e){
   
    JOptionPane.showMessageDialog(null, e);
   }
   
   }
     
     
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenSessionLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenSessionLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenSessionLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenSessionLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenSessionLecturer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Print;
    private javax.swing.JButton Search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> list;
    // End of variables declaration//GEN-END:variables

}
