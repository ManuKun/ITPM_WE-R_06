/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablems;

import com.sun.glass.events.KeyEvent;
import timetablems.DBConnect;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Supun
 */
public class ActiveLecture extends javax.swing.JFrame {

    /**
     * Creates new form ActiveLecture
     */
    public ActiveLecture() throws SQLException {
        initComponents();
        con = DBConnect.connect();
        load();
         //table color
        Atable.setBackground(Color.white);
        // disabale Maximize button
        setResizable(false);
         //date, time underline code
        String date = "<html><u> Date </u></html>";
        jLabel3.setText(date);
        String time = "<html><u> Time </u></html>";
        jLabel4.setText(time);
        //srean center code
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
     Connection con;
    PreparedStatement pst;
    DefaultTableModel df;
    
    public void load()
    {
        int a;
        try {
            pst = con.prepareStatement("select * from lecturer");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a = rd.getColumnCount();
            df = (DefaultTableModel)Atable.getModel();
            df.setRowCount(0);
            
            
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for(int i=1; i <= a; i++)
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("eid"));
                    v2.add(rs.getString("monday"));
                    v2.add(rs.getString("tuesday"));
                    v2.add(rs.getString("wednesday"));
                    v2.add(rs.getString("thursday"));
                    v2.add(rs.getString("friday"));
                    v2.add(rs.getString("saturday"));
                    v2.add(rs.getString("sunday"));    
                }

                df.addRow(v2);
            }
      
        } catch (SQLException ex) {
            Logger.getLogger(ActiveLecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Atable = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtmon = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtwen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtthu = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtfri = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtsat = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtsun = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txteid = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Clear = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        errormon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        errortue = new javax.swing.JLabel();
        errorwen = new javax.swing.JLabel();
        errorthu = new javax.swing.JLabel();
        errorfri = new javax.swing.JLabel();
        errorsun = new javax.swing.JLabel();
        errorsat = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Active Hours of Lecturers");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        Atable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "EmpID", "Monday", "Tuesday", "Wendsday", "Thursday", "Friday", "Saturday", "Sunday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Atable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Atable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 979, 230));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 144, 30));

        Search.setBackground(new java.awt.Color(0, 102, 204));
        Search.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Search");
        Search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 60, 100, 32));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Days");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 345, 45, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Time");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 345, 45, -1));

        txtmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmonActionPerformed(evt);
            }
        });
        txtmon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmonKeyReleased(evt);
            }
        });
        jPanel1.add(txtmon, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 375, 130, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Monday");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 375, 75, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tuesday");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 416, 75, 30));

        txttue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttueKeyReleased(evt);
            }
        });
        jPanel1.add(txttue, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 418, 130, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Wendsday");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 459, 75, 30));

        txtwen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtwenKeyReleased(evt);
            }
        });
        jPanel1.add(txtwen, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 461, 130, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Thuresday");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 507, 75, 30));

        txtthu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtthuActionPerformed(evt);
            }
        });
        txtthu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtthuKeyReleased(evt);
            }
        });
        jPanel1.add(txtthu, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 509, 130, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Friday");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 550, 75, 30));

        txtfri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfriKeyReleased(evt);
            }
        });
        jPanel1.add(txtfri, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 552, 130, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Saturday");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 593, 75, 30));

        txtsat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsatKeyReleased(evt);
            }
        });
        jPanel1.add(txtsat, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 595, 130, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Sunday");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 640, 75, 30));

        txtsun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsunKeyReleased(evt);
            }
        });
        jPanel1.add(txtsun, new org.netbeans.lib.awtextra.AbsoluteConstraints(452, 642, 130, 30));

        txtname.setEditable(false);
        jPanel1.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 471, 130, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Lecturer Name");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 469, 94, 30));

        txteid.setEditable(false);
        jPanel1.add(txteid, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 522, 130, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Employee ID");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 520, 94, 30));

        Clear.setBackground(new java.awt.Color(0, 102, 204));
        Clear.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setText("Clear");
        Clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        Clear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClearKeyReleased(evt);
            }
        });
        jPanel1.add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 459, 100, 32));

        Update.setBackground(new java.awt.Color(0, 102, 204));
        Update.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("Update");
        Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(795, 550, 100, 32));

        errormon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errormon, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 375, 177, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Hint :- 08.00-17.30 or Not Available");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 342, 226, 22));

        errortue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errortue, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 418, 177, 30));

        errorwen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errorwen, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 459, 177, 30));

        errorthu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errorthu, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 509, 177, 30));

        errorfri.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errorfri, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 552, 177, 30));

        errorsun.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errorsun, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 642, 177, 30));

        errorsat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(errorsat, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 593, 177, 30));
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/timetablems/1799658.jpg"))); // NOI18N
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 690));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         String val = txtsearch.getText().toString();
         int a;
         
          try {

            pst  = con.prepareStatement("select * from lecturer where name like '%"+val+"%'");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a= rd.getColumnCount();
            df = (DefaultTableModel)Atable.getModel();
            df.setRowCount(0);
            
        while(rs.next()){       
                
                Vector v2 = new Vector();
                for(int i =1; i<=a; i++){
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("eid"));
                    v2.add(rs.getString("monday"));
                    v2.add(rs.getString("tuesday"));
                    v2.add(rs.getString("wednesday"));
                    v2.add(rs.getString("thursday"));
                    v2.add(rs.getString("friday"));
                    v2.add(rs.getString("saturday"));
                    v2.add(rs.getString("sunday"));
                }
                df.addRow(v2);
           
            }            
        } catch (SQLException ex) {
            Logger.getLogger(ActiveLecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void txtthuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtthuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtthuActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
       /* if(txtname.getText().trim().isEmpty()){
            errorname.setText("*Please Enter Subject Name !");
           
        }
        else
            errorname.setText("");
            
        
        if(txtscode.getText().trim().isEmpty()){
            errorcode.setText("*Please Enter Subject Code !");
        }
        else
            errorcode.setText("");*/
        
        if(txtname.getText().trim().isEmpty() || txteid.getText().trim().isEmpty()){
            Component frame = null;
            
            //JOptionPane.showMessageDialog(frame, "Please fill in a valid value!!!");
        
        }
        
        else{
        
        df = (DefaultTableModel) Atable.getModel();
        
        int selected = Atable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
            String LecName = txtname.getText();
            String EmpID = txteid.getText();
            String Monday = txtmon.getText();
            String Tuesday = txttue.getText();
            String Wednesday = txtwen.getText();
            String Thursday = txtthu.getText();
            String Friday = txtfri.getText();
            String Saturday = txtsat.getText();
            String Sunday = txtsun.getText();
            
            int x = JOptionPane.showConfirmDialog(null, "Are you want to update Active hours of Lecturers?", "Update", JOptionPane.YES_NO_OPTION);
            
        if(x == 0)
        {

        try {
            pst = con.prepareStatement("update lecturer set name =?, eid =?, monday =?, tuesday =?, wednesday =?, thursday =?, friday=?, saturday =?, sunday =? where id =?");
            pst.setString(1,LecName);
            pst.setString(2,EmpID);
            pst.setString(3,Monday);
            pst.setString(4,Tuesday);
            pst.setString(5,Wednesday);
            pst.setString(6,Thursday);
            pst.setString(7,Friday);
            pst.setString(8,Saturday);
            pst.setString(9,Sunday);
            pst.setInt(10,id);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Hours Updated Successfully");
            
            txtname.setText("");
            txteid.setText("");
            txtmon.setText("");
            txttue.setText("");
            txtwen.setText("");
            txtthu.setText("");
            txtfri.setText("");
            txtsat.setText("");
            txtsun.setText("");
            
            //errorname.setText("");
            //errorcode.setText("");
            
            load();
            
        }   catch (Exception ex) {
                Logger.getLogger(ActiveLecture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         }    
    }//GEN-LAST:event_UpdateActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
            txtname.setText("");
            txteid.setText("");
            txtmon.setText("");
            txttue.setText("");
            txtwen.setText("");
            txtthu.setText("");
            txtfri.setText("");
            txtsat.setText("");
            txtsun.setText("");
            txtsearch.setText("");
            
            df.setRowCount(0);
        try {
            load();
        } catch (Exception ex) {
            Logger.getLogger(ActiveLecture.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClearActionPerformed

    private void AtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtableMouseClicked
        // TODO add your handling code here:
        df = (DefaultTableModel)Atable.getModel();
        
        int selected =Atable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
        txtname.setText(df.getValueAt(selected, 1).toString());
        txteid.setText(df.getValueAt(selected, 2).toString());
        txtmon.setText(df.getValueAt(selected, 3).toString());
        txttue.setText(df.getValueAt(selected, 4).toString());
        txtwen.setText(df.getValueAt(selected, 5).toString());
        txtthu.setText(df.getValueAt(selected, 6).toString());
        txtfri.setText(df.getValueAt(selected, 7).toString());
        txtsat.setText(df.getValueAt(selected, 8).toString());
        txtsun.setText(df.getValueAt(selected, 9).toString());
                
                
    }//GEN-LAST:event_AtableMouseClicked

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
                df.setRowCount(0);
                load();
                
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Search.requestFocus();
            }
    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmonActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtmonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmonKeyReleased
        // TODO add your handling code here:
         String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtmon.getText());

        if(!match.matches()){
            errormon.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errormon.setText(null);
            Update.setEnabled(true);
        }
        
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txttue.requestFocus();
            }
    }//GEN-LAST:event_txtmonKeyReleased

    private void txttueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttueKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txttue.getText());

        if(!match.matches()){
            errortue.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errortue.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtwen.requestFocus();
            }
    }//GEN-LAST:event_txttueKeyReleased

    private void txtwenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtwenKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtwen.getText());

        if(!match.matches()){
            errorwen.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errorwen .setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtthu.requestFocus();
            }
    }//GEN-LAST:event_txtwenKeyReleased

    private void txtthuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtthuKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtthu.getText());

        if(!match.matches()){
            errorthu.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errorthu.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtfri.requestFocus();
            }
    }//GEN-LAST:event_txtthuKeyReleased

    private void txtfriKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfriKeyReleased
        // TODO add your handling code here:
         String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtfri.getText());

        if(!match.matches()){
            errorfri.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errorfri.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtsat.requestFocus();
            }
    }//GEN-LAST:event_txtfriKeyReleased

    private void txtsatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsatKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtsat.getText());

        if(!match.matches()){
            errorsat.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errorsat.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtsun.requestFocus();
            }
    }//GEN-LAST:event_txtsatKeyReleased

    private void txtsunKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsunKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}|[a-zA-Z]{1,10}[ ][a-zA-Z]{1,15}";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(txtsun.getText());

        if(!match.matches()){
            errorsun.setText("* Please follow the hint..!!");
            Update.setEnabled(false);
        }
        else{
            errorsun.setText(null);
            Update.setEnabled(true);
        }
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Clear.requestFocus();
            }
    }//GEN-LAST:event_txtsunKeyReleased

    private void ClearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClearKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Update.requestFocus();
            }
    }//GEN-LAST:event_ClearKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActiveLecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActiveLecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActiveLecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActiveLecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ActiveLecture().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ActiveLecture.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Atable;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JLabel errorfri;
    private javax.swing.JLabel errormon;
    private javax.swing.JLabel errorsat;
    private javax.swing.JLabel errorsun;
    private javax.swing.JLabel errorthu;
    private javax.swing.JLabel errortue;
    private javax.swing.JLabel errorwen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txteid;
    private javax.swing.JTextField txtfri;
    private javax.swing.JTextField txtmon;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsat;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtsun;
    private javax.swing.JTextField txtthu;
    private javax.swing.JTextField txttue;
    private javax.swing.JTextField txtwen;
    // End of variables declaration//GEN-END:variables
}
